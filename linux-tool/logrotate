
##   logrotate tool to cutting log   ##
# more decription see man logrotate

# logrotate切割的思路、需求:
 1）拷贝并重命名一份现有日志文件，同时把现有容量大的日志文件内容清空把现有日志文件cp一份为另外的文件名，同时非常快速地把现有日志文件清空。
 2）切割时，清空的日志，可以正常继续自动写入日志。
 3）不停相关应用。


### Logrorate related files：
## logrotate directory
 /etc/logrotate.d
## ogrotate main configure file 
 /etc/logrotate.conf

## see main configure file :
[root@serverb ~]# cat /etc/logrotate.conf
# see "man logrotate" for details
# rotate log files weekly
weekly

# keep 4 weeks worth of backlogs
rotate 4

# create new (empty) log files after rotating old ones
create

# use date as a suffix of the rotated file
dateext

# uncomment this if you want your log files compressed
#compress

# RPM packages drop log rotation information into this directory
include /etc/logrotate.d

# no packages own wtmp and btmp -- we'll rotate them here
/var/log/wtmp {
    monthly
    create 0664 root utmp
        minsize 1M
    rotate 1
}

/var/log/btmp {
    missingok
    monthly
    create 0600 root utmp
    rotate 1
}

# system-specific logs may be also be configured here.
# /etc/logrotate.conf 中的 include
/etc/logrotate.conf 中的 include /etc/logrotate.d 是调用该目录下所有文件。


## cron 下的logrotate ：
[root@serverb ~]# cd /etc/cron.daily/
# 每一天都会调用/etc/cron.daily/logrotate 脚本
[root@serverb cron.daily]# ll /etc/cron.daily/
total 12
-rwx------. 1 root root 219 Mar 31  2020 logrotate
-rwxr-xr-x. 1 root root 618 Oct 30  2018 man-db.cron
-rwx------. 1 root root 208 Apr 10  2018 mlocate
# /etc/cron.daily/logrotate 的脚本内容
[root@serverb cron.daily]# cat logrotate
#!/bin/sh

/usr/sbin/logrotate -s /var/lib/logrotate/logrotate.status /etc/logrotate.conf
EXITVALUE=$?
if [ $EXITVALUE != 0 ]; then
    /usr/bin/logger -t logrotate "ALERT exited abnormally with [$EXITVALUE]"
fi
exit 0
[root@serverb cron.daily]#
# 具体cron,crontab 用法，see cron and crontab files in my github .


## logrotate 配置文件常用参数说明：
# 配置参数	                     Description 说明
 compress	                     通过gzip压缩转储以后的日志
 nocompress	                     不压缩
 copytruncate	                     用于还在打开中的日志文件，把当前日志备份并截断
 nocopytruncate	                     备份日志文件但是不截断
 create mode owner group	     转储文件，使用指定的文件模式创建新的日志文件
 nocreate	                     不建立新的日志文件
 delaycompress	                     和 compress 一起使用时，转储的日志文件到下一次转储时才压缩
 nodelaycompress	             覆盖 delaycompress 选项，转储同时压缩。
 errors address	                     专储时的错误信息发送到指定的Email 地址
 ifempty	                     即使是空文件也转储，这个是 logrotate 的缺省选项。
 notifempty	                     如果是空文件的话，不转储
 mail address	                     把转储的日志文件发送到指定的E-mail 地址
 nomail	                             转储时不发送日志文件
 olddir directory	             转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统
 noolddir	                     转储后的日志文件和当前日志文件放在同一个目录下
 sharedscripts	                     运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本
 prerotate endscript	             在转储以前需要执行的命令可以放入这个对，这两个关键字必须单独成行
 daily	                             指定转储周期为每天
 weekly	                             指定转储周期为每周
 monthly	                     指定转储周期为每月
 rotate count	                     指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份
 tabooext [+] list	             让logrotate不转储指定扩展名的文件，缺省的扩展名是：.rpm-orig, .rpmsave, v, 和 ~
 size size	                     当日志文件到达指定的大小时才转储，bytes(缺省)及KB(sizek)或MB(sizem)
 missingok	                     在日志轮循期间，任何错误将被忽略，例如“文件无法找到”之类的错误。
 dateext	                     使用当期日期作为命名格式
 dateformat .%s                      配合dateext使用，紧跟在下一行出现，定义文件切割后的文件名，必须配合
 

## cutting nginx log with /etc/logrotate.d/nginx ：
# test example
[root@serverb ~]# cat /etc/logrotate.d/nginx
/usr/local/nginx/logs/*.log {
        daily
        rotate 30
        missingok
        notifempty
        compress
        nodelaycompress
        copytruncate
        olddir /home/nginx_log
        dateext
        dateformat -%Y-%m-%d
        dateyesterday
}
# logrotate -v -f ，手动强制执行logrotate,且显示过程。
[root@serverb logrotate.d]#logrotate -vf /etc/logroate.d/nginx

# logrotate 的命令：
logrotate [OPTION...] <configfile>
-d, --debug ：debug模式，测试配置文件是否有错误，不真实执行。
-f, --force ：强制转储文件。
-m, --mail=command ：压缩日志后，发送日志到指定邮箱。
-s, --state=statefile ：使用指定的状态文件。
-v, --verbose ：显示转储过程。


# 参考链接：
 https://www.yisu.com/zixun/9860.html                        日志切割logrotate的介绍 
 https://www.runoob.com/linux/linux-comm-logrotate.html      Linux logrotate命令
 http://www.yunweipai.com/33976.html                         Nginx使用Logrotate工具实现日志切割
 https://blog.csdn.net/fangfu123/article/details/109898345   通过logrotate对nginx日志进行管理
 https://blog.csdn.net/qq_29974229/article/details/121808739 Logrotate日志切割
 https://blog.csdn.net/weixin_33782386/article/details/88829678 日志切割logrotate和定时任务crontab详解
 http://www.tracefact.net/tech/080.html                       linux上配置计划任务(cron和crontab)
